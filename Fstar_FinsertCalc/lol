#!/bin/bash
supported_cluster_sizes=(24 30 36 42 48 54 60 66 72 78 84 90)

for cluster_size in "${supported_cluster_sizes[@]}"; do
    # Extract the value and save it to the variable x
    x=$(awk '{a[NR]=$1; b[NR]=$3} END{for(i=NR;i>=1;i--) if(b[i]==0) {print a[i]; exit}}' <(tail -n+4 "../ClusterSize$cluster_size/fileNum_s0_m0_rel"))

    # Print "hello x" a certain number of times (e.g., 5 times)
    echo "DataFileNumber_And_ClusterSize_resp $x $cluster_size"

    # Check if the directory already exists
    if [ -d "ClusterSize_BarAndChar$cluster_size" ]; then
        echo "Directory ClusterSize_BarAndChar$cluster_size already exists. Skipping copy operation."
    else
        # Create the directory and copy the files
        cp -r default ClusterSize_BarAndChar$cluster_size
    fi

    cp "../ClusterSize$cluster_size/data.final.lmp.$x" ClusterSize_BarAndChar$cluster_size/charges/data.lmp
    sed -i '21,+6d' ClusterSize_BarAndChar$cluster_size/charges/data.lmp
    cp "../ClusterSize$cluster_size/data.final.lmp.$x" ClusterSize_BarAndChar$cluster_size/BAR1/data.lmp
    sed -i '21,+6d' ClusterSize_BarAndChar$cluster_size/BAR1/data.lmp

sed -i "0,/charge1/s//char_ClSize$cluster_size/" ClusterSize_BarAndChar$cluster_size/charges/job.scr
sed -i "0,/charge1/s//rerun_ClSize$cluster_size/" ClusterSize_BarAndChar$cluster_size/charges/job.scr2
sed -i "0,/bar/s//BAR1_ClSize$cluster_size/" ClusterSize_BarAndChar$cluster_size/BAR1/job.scr

done

echo "$(basename "$(dirname "$PWD")")"
#testing
